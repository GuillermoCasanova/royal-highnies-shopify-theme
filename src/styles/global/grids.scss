//
// -- Start editing -- //
//


.box-row {
  background-color: red;
  margin-bottom: 10px;
  width: 100%;
  height: 20px;  
}


// Set the number of columns you want to use on your layout.
$flexboxgrid-grid-columns: 12 !default;
// Set the gutter between columns.
$flexboxgrid-gutter-width: .25rem !default;
// Set a margin for the container sides.
$flexboxgrid-outer-margin: 0rem !default;

//
// -- Stop editing -- //
//

$gutter-compensation: $flexboxgrid-gutter-width * .5 * -1;
$half-gutter-width: $flexboxgrid-gutter-width * .5;

.wrapper {
  box-sizing: border-box;
  max-width: $flexboxgrid-max-width;
  margin: 0 auto;
}

.container-fluid {
  margin-right: auto;
  margin-left: auto;
  padding-right: 1rem;
  padding-left: 1rem;
  height: auto; 
  box-sizing: border-box;
  max-width: $flexboxgrid-max-width;
  margin: 0 auto;
  width: 100%;

  &.no-padding-sm {
    padding: 0; 
    @include media-query($medium-up) {
      padding-right: 1rem;
      padding-left: 1rem;
    }

    @include media-query($large-up) {
      padding-right: 1.25rem;
      padding-left: 1.25rem;
      max-width: 62rem;
    }
  }

  @include media-query($medium-up) {
    padding-right: 1rem;
    padding-left: 1rem;
  }

  @include media-query($large-up) {
    padding-right: 1.25rem;
    padding-left: 1.25rem;
    max-width: 62rem;
  }

}

.container-fluid--no-padding {
  padding: 0 !important;
}

.row {
  box-sizing: border-box;
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;
}

.container-fluid {
   .row {
    margin-right: $gutter-compensation;
    margin-left: $gutter-compensation;
  }
}

.row--no-wrap {
  flex-wrap: nowrap;
}

.row--contained { 
  margin-right: 0; 
  margin-left: 0; 
}

.row--expanded {
  width: 100%;
}

.row--stretch {
  align-items: stretch; 
}


.contained-sm {
  margin-right: 0 !important; 
  margin-left: 0 !important; 
}

.row.reverse {
  flex-direction: row-reverse;
}

.col.reverse {
  flex-direction: column-reverse;
}

@mixin flexboxgrid-sass-col-common {
  box-sizing: border-box;

  // split flex: 0 0 auto into individual props
  flex-grow: 0;
  flex-shrink: 0;

  // we leave flex-basis: auto out of common because
  // in some spots we need it and some we dont
  // more why here: https://github.com/kristoferjoseph/flexboxgrid/issues/126

  padding-right: $half-gutter-width;
  padding-left: $half-gutter-width;
}

$name: xs;
[class*="col-#{$name}"] {
  @include flexboxgrid-sass-col-common;
  flex-basis: auto;
}
@for $i from 1 through $flexboxgrid-grid-columns {
  .col-#{$name}-#{$i} {
    flex-basis: 100% / $flexboxgrid-grid-columns * $i;
    max-width: 100% / $flexboxgrid-grid-columns * $i;
  }
}
@for $i from 0 through $flexboxgrid-grid-columns {
  .col-#{$name}-offset-#{$i} {
    @if $i == 0 {
      margin-left: 0;
    } @else {
      margin-left: 100% / $flexboxgrid-grid-columns * $i;
    }
  }
}
.col-#{$name} {
  flex-grow: 1;
  flex-basis: 0;
  max-width: 100%;
}
.start-#{$name} {
  justify-content: flex-start;
  text-align: left;
}

.center-#{$name} {
  justify-content: center;
}


.end-#{$name} {
  justify-content: flex-end;
  text-align: right;
}

.top-#{$name} {
  align-items: flex-start;
}

.middle-#{$name} {
  align-items: center;
}

.bottom-#{$name} {
  align-items: flex-end;
}

.around-#{$name} {
  justify-content: space-around;
}

.between-#{$name} {
  justify-content: space-between;
}

.first-#{$name} {
  order: -1;
}

.last-#{$name} {
  order: 1;
}

.reverse-#{$name} {
  flex-direction: row-reverse;
}

.columns-#{$name} {
  flex-direction: column; 
}

// .no-col-padding-sm {
//   [class*="col-#{$name}"] {
//     padding: 0; 
//   }
// }

.row-#{$name} {
  flex-direction: row; 
}

@each $breakpoint in $flexboxgrid-breakpoints {
  $name: nth($breakpoint, 1);
  $size: nth($breakpoint, 2);
  $container: nth($breakpoint, 3);
  @media only screen and (min-width: $size) {
    .container {
      width: $container;
    }

    [class*="col-#{$name}"] {
      @include flexboxgrid-sass-col-common;
      flex-basis: auto;
    }
    @for $i from 1 through $flexboxgrid-grid-columns {
      .col-#{$name}-#{$i} {
        flex-basis: 100% / $flexboxgrid-grid-columns * $i;
        max-width: 100% / $flexboxgrid-grid-columns * $i;
      }
    }
    @for $i from 0 through $flexboxgrid-grid-columns {
      .col-#{$name}-offset-#{$i} {
        @if $i == 0 {
          margin-left: 0;
        } @else {
          margin-left: 100% / $flexboxgrid-grid-columns * $i;
        }
      }
    }
    .col-#{$name} {
      flex-grow: 1;
      flex-basis: 0;
      max-width: 100%;
    }

    .stretch-#{$name} {
      align-items: stretch; 
    }

    .start-#{$name} {
      justify-content: flex-start;
      text-align: left;
    }

    .center-#{$name} {
      justify-content: center;
    }

    .end-#{$name} {
      justify-content: flex-end;
      text-align: right;
    }

    .top-#{$name} {
      align-items: flex-start;
    }

    .middle-#{$name} {
      align-items: center;
    }

    .bottom-#{$name} {
      align-items: flex-end;
    }

    .around-#{$name} {
      justify-content: space-around;
    }

    .between-#{$name} {
      justify-content: space-between;
    }

    .reverse-#{$name} {
      flex-direction: row-reverse;
    }

    .reverse-col-#{$name} {
      flex-direction: column-reverse;
    }

    .first-#{$name} {
      order: -1;
    }

    .last-#{$name} {
      order: 1;
    }

    .columns-#{$name} {
      flex-direction: column; 
    }

    .row-#{$name} {
      flex-direction: row; 
    }
  }
}